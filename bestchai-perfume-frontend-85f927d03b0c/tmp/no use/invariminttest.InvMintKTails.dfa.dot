digraph {
  0 [shape=circle,label=""];
  0 -> 5 [label="nextToken():::EXIT336"]
  1 [shape=circle,label=""];
  1 -> 0 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  1 -> 6 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  2 [shape=circle,label=""];
  2 -> 1 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  3 [shape=circle,label=""];
  3 -> 0 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  4 [shape=circle,label=""];
  initial [shape=plaintext,label=""];
  initial -> 4
  4 -> 2 [label="INITIAL"]
  5 [shape=circle,label=""];
  5 -> 7 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  5 -> 8 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  5 -> 9 [label="TERMINAL"]
  6 [shape=circle,label=""];
  6 -> 0 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  7 [shape=circle,label=""];
  7 -> 10 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  7 -> 9 [label="TERMINAL"]
  8 [shape=circle,label=""];
  8 -> 11 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  8 -> 5 [label="nextToken():::EXIT336"]
  9 [shape=doublecircle,label=""];
  10 [shape=circle,label=""];
  10 -> 9 [label="TERMINAL"]
  10 -> 3 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  11 [shape=circle,label=""];
  11 -> 5 [label="nextToken():::EXIT336"]
}
