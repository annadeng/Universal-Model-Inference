digraph {
  0 [shape=circle,label=""];
  0 -> 4 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  0 -> 12 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  1 [shape=circle,label=""];
  1 -> 3 [label="TERMINAL"]
  2 [shape=circle,label=""];
  2 -> 6 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  3 [shape=doublecircle,label=""];
  4 [shape=circle,label=""];
  4 -> 8 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  5 [shape=circle,label=""];
  5 -> 8 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  6 [shape=circle,label=""];
  6 -> 1 [label="nextToken():::EXIT336"]
  6 -> 7 [label="nextToken():::EXIT336"]
  6 -> 11 [label="nextToken():::EXIT336"]
  7 [shape=circle,label=""];
  7 -> 0 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  7 -> 12 [label="hasMoreTokens():::EXIT308;condition="not(return == true)""]
  8 [shape=circle,label=""];
  8 -> 6 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  9 [shape=circle,label=""];
  initial [shape=plaintext,label=""];
  initial -> 9
  9 -> 10 [label="INITIAL"]
  10 [shape=circle,label=""];
  10 -> 5 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  10 -> 8 [label="StringTokenizer(java.lang.String, java.lang.String, boolean):::EXIT187"]
  11 [shape=circle,label=""];
  11 -> 2 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  11 -> 6 [label="hasMoreTokens():::EXIT308;condition="return == true""]
  12 [shape=circle,label=""];
  12 -> 3 [label="TERMINAL"]
}
